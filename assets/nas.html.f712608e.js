import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as p,c as i,a as s,b as e,e as l,d as n}from"./app.29a9c448.js";const c={},r=l('<h1 id="nas" tabindex="-1"><a class="header-anchor" href="#nas" aria-hidden="true">#</a> Nas</h1><p>\u5951\u673A\u662F\u548CLP\u8BA8\u8BBA\u751F\u65E5\u793C\u7269\uFF0C\u60F3\u8981\u79FB\u52A8\u786C\u76D8\uFF0C\u6211\u7684\u7406\u89E3\u662F\u8FD9\u79CD\u4E1C\u897F\u5B89\u5168\u6027\u5F88\u5DEE\uFF0C\u6570\u636E\u5F88\u5BB9\u6613\u4E22\u5931\uFF0C\u9042\u7814\u7A76\u4E86\u516C\u6709\u4E91\uFF0C\u53C8\u5230NAS</p><h2 id="_1-\u9009\u8D2D" tabindex="-1"><a class="header-anchor" href="#_1-\u9009\u8D2D" aria-hidden="true">#</a> 1. \u9009\u8D2D</h2><ul><li>1k\u5DE6\u53F3\u7684\u897F\u90E8\u6570\u636E\uFF0C\u529F\u80FD\u592A\u5C11</li><li>2k\u7FA4\u6656 ARM\u67B6\u6784\u7684\u5904\u7406\u5668\uFF0C\u4E0D\u652F\u6301docker</li><li>\u53D1\u73B0\u4E86\u516C\u53F8\u7528\u7684terra master\uFF0C\u540C\u6837\u4EF7\u683C\u7528\u7684Intel\u7684\u5904\u7406\u5668\uFF0C2G\u5185\u5B58</li></ul><p>\u6700\u7EC8\u9009\u5B9AF2-220\uFF0C\u642D\u914D\u5355\u786C\u76D8\u51711950\u5143</p><h2 id="_2-\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_2-\u914D\u7F6E" aria-hidden="true">#</a> 2. \u914D\u7F6E</h2>',6),u=s("li",null,[s("p",null,"\u7CFB\u7EDF"),s("ol",null,[s("li",null,"\u81EA\u5E26\u7CFB\u7EDF\u4F46\u5341\u5206\u4E0D\u597D\u7528\uFF0C\u8D44\u6E90\u4E5F\u5C11\uFF0C\u5176\u5B9E\u662F\u4E0D\u63A8\u8350\u7684")])],-1),d=s("p",null,"\u7F51\u7EDC",-1),k=s("li",null,"\u7531\u4E8E\u7528\u5149\u732B\u62E8\u53F7\uFF0C\u6240\u4EE5\u8BBE\u7F6E\u8DEF\u7531\u5668\u4E3ADMZ\u4E3B\u673A\uFF0C\u53C8\u5C06NAS\u4F5C\u4E3A\u8DEF\u7531\u5668\u7684DMZ\u4E3B\u673A",-1),v=n("\u52A8\u6001IP\u89E3\u51B3(\u6BCF\u6B21\u65AD\u7535\uFF0C\u518D\u6B21\u62E8\u53F7\u90FD\u4F1A\u6362IP)\uFF0C\u57DF\u540D\u89E3\u6790 "),b=s("li",null,"\u82B1\u751F\u58F3\uFF0C\u4E0D\u8003\u8651\uFF0C\u57DF\u540D\u592A\u957F\uFF0C\u636E\u8BF4\u6709\u6D41\u91CF\u9650\u5236\uFF0C\u6536\u8D39\u9650\u5236\u591A -- \u5931\u8D25",-1),m=s("li",null,"dyndns \u53CD\u5E94\u6162\uFF0C\u6CA1\u6709\u6210\u529F -- \u5931\u8D25",-1),h=s("li",null,"\u8DEF\u7531\u5668\u7684ddns\uFF0CTPlink\u4E0D\u80FD\u767B\u9646TPlinkID -- \u5931\u8D25",-1),_=n("\u6700\u7EC8\u4F7F\u7528dnspod\u52A8\u6001\u89E3\u6790 -- \u6210\u529F "),g=s("li",null,"\u914D\u7F6E\u597D\u4E8C\u7EA7\u57DF\u540D\u89E3\u6790nas,\u7C7B\u578BA",-1),f=s("li",null,"\u83B7\u53D6\u52A8\u6001\u89E3\u6790\u7684API token",-1),q=n("\u91C7\u7528\u811A\u672C\u90E8\u7F72\u5230nas"),$={href:"https://github.com/kkkgo/dnspod-ddns-with-bashshell",target:"_blank",rel:"noopener noreferrer"},w=n("https://github.com/kkkgo/dnspod-ddns-with-bashshell"),y=s("li",null,"TOS\u5783\u573E\uFF0Ccurl\u547D\u4EE4\u90FD\u6CA1\u6709\uFF0Cssh\u767B\u9646\u5230root\u8D26\u53F7\uFF0C\u521B\u5EFA\u4E86centos7\u7684docker\u7CFB\u7EDF\uFF0C\u7136\u540E\u914D\u7F6E\u811A\u672C\u548C\u5B9A\u65F6\u4EFB\u52A1\uFF0COK",-1),x=s("p",null,[n("Docker"),s("br"),n(" \u7CFB\u7EDF\u5F88\u6B8B\uFF0C\u8FD8\u662F\u9700\u8981docker\u6765\u505A")],-1),I=l(`<li><p>mxt_centos</p><ol><li><p>run</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> run -itd -p <span class="token number">22222</span>:22 -v /root/centos:/root --name mxt_centos --privileged<span class="token operator">=</span>true docker/mxt_centos /usr/sbin/init
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> -it docker_id /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>crontab</p><ol><li>\u7CFB\u7EDF\u7F3A\u5C11curl\u7B49\u547D\u4EE4, \u4F46\u662Fdocker\u5BF9crontab\u7684\u652F\u6301\u4E0D\u597D\u7528, \u6700\u7EC8\u89E3\u51B3\u5982\u4E0B</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>/mnt/md0/application/bin/docker <span class="token builtin class-name">exec</span> mxt_centos /bin/bash -c <span class="token string">&quot;cd /root &amp; /usr/bin/sh /root/dnspod_ddns.sh &gt;/root/cron.log&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>dnspod \u52A8\u6001ip\u7ED1\u5B9A\u57DF\u540D</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u5B9A\u65F6\u4EFB\u52A1crontab\u6765\u914D\u7F6E\u57DF\u540D\u52A8\u6001\u89E3\u6790</span>
*/10 * * * * <span class="token function">sh</span> /home/dnspod_ddns.sh <span class="token operator">&gt;</span>/home/cron.log
<span class="token comment"># /home/dnspod_ddns.sh</span>
<span class="token comment">#Dnspod DDNS with BashShell</span>
<span class="token comment">#Github:https://github.com/kkkgo/dnspod-ddns-with-bashshell</span>
<span class="token comment">#More: https://03k.org/dnspod-ddns-with-bashshell.html</span>
<span class="token comment">#CONF START</span>
<span class="token assign-left variable">API_ID</span><span class="token operator">=</span><span class="token number">111374</span>
<span class="token assign-left variable">API_Token</span><span class="token operator">=</span>2551604e10be0d939b50e56d4ea1ae3f
<span class="token assign-left variable">domain</span><span class="token operator">=</span>maxiaoteng.xyz
<span class="token assign-left variable">host</span><span class="token operator">=</span>nas
<span class="token assign-left variable">CHECKURL</span><span class="token operator">=</span><span class="token string">&quot;http://ip.03k.org&quot;</span>
<span class="token comment">#OUT=&quot;pppoe&quot;</span>
<span class="token comment">#CONF END</span>
<span class="token builtin class-name">.</span> /etc/profile
<span class="token function">date</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>echo <span class="token variable">$CHECKURL</span> <span class="token operator">|</span><span class="token function">grep</span> -q <span class="token string">&quot;://&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">IPREX</span><span class="token operator">=</span><span class="token string">&#39;([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])&#39;</span>
<span class="token assign-left variable">URLIP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -4 -k <span class="token punctuation">$(</span>if <span class="token punctuation">[</span> -n <span class="token string">&quot;<span class="token variable">$OUT</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;--interface <span class="token variable">$OUT</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">fi</span><span class="token punctuation">)</span> -s $CHECKURL<span class="token operator">|</span><span class="token function">grep</span> -Eo <span class="token string">&quot;<span class="token variable">$IPREX</span>&quot;</span><span class="token operator">|</span><span class="token function">tail</span> -n1<span class="token variable">)</span></span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>echo <span class="token variable">$URLIP</span> <span class="token operator">|</span><span class="token function">grep</span> -qEvo <span class="token string">&quot;<span class="token variable">$IPREX</span>&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">URLIP</span><span class="token operator">=</span><span class="token string">&quot;Get <span class="token variable">$DOMAIN</span> URLIP Failed.&quot;</span>
<span class="token keyword">fi</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;[URL IP]:<span class="token variable">$URLIP</span>&quot;</span>
<span class="token assign-left variable">dnscmd</span><span class="token operator">=</span><span class="token string">&quot;nslookup&quot;</span><span class="token punctuation">;</span><span class="token builtin class-name">type</span> <span class="token function">nslookup</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token operator">||</span><span class="token assign-left variable">dnscmd</span><span class="token operator">=</span><span class="token string">&quot;ping -c1&quot;</span>
<span class="token assign-left variable">DNSTEST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>$dnscmd $host.$domain<span class="token variable">)</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$?</span>&quot;</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$dnscmd</span>&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;nslookup&quot;</span> <span class="token punctuation">]</span><span class="token operator">||</span><span class="token punctuation">(</span>echo <span class="token variable">$DNSTEST</span> <span class="token operator">|</span><span class="token function">grep</span> -qEvo <span class="token string">&quot;<span class="token variable">$IPREX</span>&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">DNSIP</span><span class="token operator">=</span><span class="token string">&quot;Get <span class="token variable">$host</span>.<span class="token variable">$domain</span> DNS Failed.&quot;</span>
<span class="token keyword">else</span> <span class="token assign-left variable">DNSIP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $DNSTEST<span class="token operator">|</span><span class="token function">grep</span> -Eo <span class="token string">&quot;<span class="token variable">$IPREX</span>&quot;</span><span class="token operator">|</span><span class="token function">tail</span> -n1<span class="token variable">)</span></span>
<span class="token keyword">fi</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;[DNS IP]:<span class="token variable">$DNSIP</span>&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$DNSIP</span>&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;<span class="token variable">$URLIP</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;IP SAME IN DNS,SKIP UPDATE.&quot;</span>
<span class="token builtin class-name">exit</span>
<span class="token keyword">fi</span>
<span class="token keyword">fi</span>
<span class="token assign-left variable">token</span><span class="token operator">=</span><span class="token string">&quot;login_token=<span class="token variable">\${API_ID}</span>,<span class="token variable">\${API_Token}</span>&amp;format=json&amp;lang=en&amp;error_on_empty=yes&amp;domain=<span class="token variable">\${domain}</span>&amp;sub_domain=<span class="token variable">\${host}</span>&quot;</span>
<span class="token assign-left variable">Record</span><span class="token operator">=</span><span class="token string">&quot;$(curl -4 -k <span class="token variable"><span class="token variable">$(</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">&quot;<span class="token variable">$OUT</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;--interface <span class="token variable">$OUT</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">fi</span><span class="token variable">)</span></span> -s -X POST https://dnsapi.cn/Record.List -d &quot;</span><span class="token variable">\${token}</span><span class="token string">&quot;)&quot;</span>
<span class="token assign-left variable">iferr</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">{</span>Record<span class="token comment">#*code}|cut -d&#39;&quot;&#39; -f3</span><span class="token variable">)</span></span>&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$iferr</span>&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;1&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">record_ip</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">{</span>Record<span class="token comment">#*value}|cut -d&#39;&quot;&#39; -f3</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;[API IP]:<span class="token variable">$record_ip</span>&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$record_ip</span>&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;<span class="token variable">$URLIP</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;IP SAME IN API,SKIP UPDATE.&quot;</span>
<span class="token builtin class-name">exit</span>
<span class="token keyword">fi</span>
<span class="token assign-left variable">record_id</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">{</span>Record<span class="token comment">#*\\&quot;records\\&quot;\\:\\[\\{\\&quot;id\\&quot;}|cut -d&#39;&quot;&#39; -f2</span><span class="token variable">)</span></span>
<span class="token assign-left variable">record_line_id</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">{</span>Record<span class="token comment">#*line_id}|cut -d&#39;&quot;&#39; -f3</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> Start DDNS update<span class="token punctuation">..</span>.
<span class="token assign-left variable">ddns</span><span class="token operator">=</span><span class="token string">&quot;$(curl -4 -k <span class="token variable"><span class="token variable">$(</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">&quot;<span class="token variable">$OUT</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;--interface <span class="token variable">$OUT</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">fi</span><span class="token variable">)</span></span> -s -X POST https://dnsapi.cn/Record.Ddns -d &quot;</span><span class="token variable">\${token}</span><span class="token operator">&amp;</span><span class="token assign-left variable">record_id</span><span class="token operator">=</span><span class="token variable">\${record_id}</span><span class="token operator">&amp;</span><span class="token assign-left variable">record_line_id</span><span class="token operator">=</span><span class="token variable">\${record_line_id}</span><span class="token string">&quot;)&quot;</span>
<span class="token assign-left variable">ddns_result</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">{</span>ddns<span class="token comment">#*message\\&quot;}|cut -d&#39;&quot;&#39; -f2</span><span class="token variable">)</span></span>&quot;</span>
<span class="token builtin class-name">echo</span> -n <span class="token string">&quot;DDNS upadte result:<span class="token variable">$ddns_result</span> &quot;</span>
<span class="token builtin class-name">echo</span> <span class="token variable">$ddns</span><span class="token operator">|</span><span class="token function">grep</span> -Eo <span class="token string">&quot;<span class="token variable">$IPREX</span>&quot;</span><span class="token operator">|</span><span class="token function">tail</span> -n1
<span class="token keyword">else</span> <span class="token builtin class-name">echo</span> -n Get <span class="token variable">$host</span><span class="token builtin class-name">.</span><span class="token variable">$domain</span> error <span class="token builtin class-name">:</span>
<span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">{</span>Record<span class="token comment">#*message\\&quot;}</span><span class="token variable">)</span></span><span class="token operator">|</span><span class="token function">cut</span> -d<span class="token string">&#39;&quot;&#39;</span> -f2
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>mysql</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> create -p <span class="token number">3306</span>:3306 --name docker_mysql -v /root/mysql:/var/lib/mysql -e <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>password mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,2),P=s("p",null,"baiduyun",-1),S=n("\u53C2\u8003\u5730\u5740\uFF1A"),D={href:"https://github.com/john-shine/Docker-CodeWeavers_CrossOver-VNC/tree/master/BaiduNetdisk",target:"_blank",rel:"noopener noreferrer"},N=n("https://github.com/john-shine/Docker-CodeWeavers_CrossOver-VNC/tree/master/BaiduNetdisk"),R=l(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> run -d -p <span class="token number">5901</span>:5901 -v /mnt/md0/public/baiduyun:/mnt/drive_d -e <span class="token assign-left variable">vnc_password</span><span class="token operator">=</span>password johnshine/baidunetdisk-crossover-vnc:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),T=s("h2",{id:"_3-\u7CFB\u7EDFomv",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-\u7CFB\u7EDFomv","aria-hidden":"true"},"#"),n(" 3. \u7CFB\u7EDFOMV")],-1),E=s("p",null,"\u9009\u62E9omv\u4E3B\u8981\u662F\u539F\u6709\u7CFB\u7EDF\u592A\u62C9\u57AE, \u5404\u79CD\u4E25\u683C\u548C\u4E0D\u517C\u5BB9, \u548C\u9ED1\u7FA4\u6656(\u7CFB\u7EDF\u5B89\u88C5\u5728\u6BCF\u5757\u786C\u76D8\u4E0B)\u76F8\u6BD4, omv\u7CFB\u7EDF\u72EC\u7ACB\u5B89\u88C5\u5728U\u76D8, \u6570\u636E\u76D8\u72EC\u7ACB, \u53EF\u4EE5\u76F4\u63A5\u6302\u8F7D\u5230\u5176\u4ED6linux\u7CFB\u7EDF\u8BFB\u5199",-1),U=s("p",null,"\u5B89\u88C5",-1),O=n("\u5E38\u7528\u5B89\u88C5 "),A=n("\u4F7F\u7528U\u76D8\u523B\u5F55omv\u7CFB\u7EDF\u955C\u50CF, \u8F6F\u4EF6"),C={href:"https://www.balena.io/etcher/",target:"_blank",rel:"noopener noreferrer"},L=n("balena"),M=s("li",null,"\u5C06\u7CFB\u7EDF\u548C\u7CFB\u7EDFU\u76D8\u63D2\u5165, \u81EA\u52A8\u5B89\u88C5\u548C\u542F\u52A8",-1),B=n("\u4E5F\u53EF\u4EE5\u7528\u865A\u62DF\u673A\u4E5F\u53EF\u4EE5\u5B89\u88C5\u540E\u63D2\u5165\u5230\u4E3B\u673A\u4E0A, \u89C1"),V={href:"https://forum.openmediavault.org/index.php/Thread/3453-Installing-OMV-w-o-keyboard-and-monitor-using-VirtualBox/",target:"_blank",rel:"noopener noreferrer"},X=n("\u65E0\u663E\u793A\u5668\u5B89\u88C5"),j=s("ol",null,[s("li",null,"\u7F51\u7EDC\u914D\u7F6E\u6709\u95EE\u9898")],-1),G=s("p",null,"\u914D\u7F6E(\u5B89\u5168\u8003\u8651, \u53EA\u5141\u8BB8\u5C40\u57DF\u7F51\u8BBF\u95EE)",-1),K=l("<li><p>\u4E3B\u8981\u5305\u62EC\u6587\u4EF6\u670D\u52A1\u548C\u7F51\u7EDC\u670D\u52A1</p><ol><li>\u6587\u4EF6\u670D\u52A1 <ol><li>SMB: \u5C40\u57DF\u7F51\u4E3B\u8981\u901A\u8FC7SMB\u8BBF\u95EE</li><li>kodexplorer: <ol><li>\u6587\u6863\u548C\u56FE\u7247\u9700\u8981\u7B80\u5355\u9884\u89C8</li><li>\u5907\u4EFD\u7535\u8111\u4EE5\u53CA\u624B\u673A\u6587\u4EF6\u65F6</li><li>\u591A\u5E73\u53F0\u5171\u4EAB\u6587\u4EF6</li></ol></li></ol></li><li>\u7F51\u7EDC\u670D\u52A1</li></ol></li>",1),F=s("p",null,"\u5F00\u542F\u670D\u52A1",-1),W=l("<li>web\u9875\u9762 <ol><li>omv-firstaid\u8BBE\u7F6E</li><li>\u7AEF\u53E3: 8181</li></ol></li><li>ssh <ol><li>\u7AEF\u53E3: 9222</li></ol></li><li>docker</li><li><s>ftp</s><ol><li>21 22</li></ol></li><li>smb <ol><li>maxiaoteng</li><li>\u5171\u4EAB\u4E24\u4E2A <ol><li>for_guest \u516C\u5F00\u89C6\u9891\u76EE\u5F55</li><li>maxiaoteng \u6574\u4E2A\u76EE\u5F55</li></ol></li><li>\u670D\u52A1 <ul><li>SMB\u27A1\uFE0F\u8BBE\u7F6E(\u542F\u7528)</li><li>\u5171\u4EAB(\u6DFB\u52A0\u9700\u8981\u7684\u6587\u4EF6\u5939), \u9700\u8981\u5728\u8BBF\u95EE\u6743\u9650\u7BA1\u7406\u4E2D\u5148\u914D\u7F6E\u5171\u4EAB\u6587\u4EF6\u5939</li></ul></li></ol></li><li>jellyfin <ol><li>maxiaoteng</li><li>docker\u5B89\u88C5</li><li>8096</li></ol></li><li>mysql <ol><li>docker\u5B89\u88C5</li><li>3306</li></ol></li>",7),H=n("kodexplore "),Z={href:"https://www.jianshu.com/p/4731a1ef01d1",target:"_blank",rel:"noopener noreferrer"},z=n("https://www.jianshu.com/p/4731a1ef01d1"),Q=s("li",null,"\u901A\u8FC7/data\u8BBF\u95EE\u5BBF\u4E3B\u673A\u76EE\u5F55",-1),Y=s("li",null,"\u8BBE\u7F6E\u9632\u6B62crtf\u767B\u5F55, \u751A\u81F3\u53EF\u4EE5\u52A0\u4E0A\u9A8C\u8BC1\u7801",-1),J=s("li",null,"\u9664\u4E86\u7BA1\u7406\u5458, \u5176\u4ED6\u7528\u6237\u8981\u60F3\u8BBF\u95EE/data, \u9700\u8981\u5355\u72EC\u914D\u7F6Ephp",-1),ss=s("li",null,[s("blockquote",null,[s("p",null,[n("docker run -d -p 9000:80 --name kodexplorer "),s("br"),n(" -v /srv/dev-disk-by-label-kulh2t/appdata/www:/var/www/html "),s("br"),n(" -v /srv:/data "),s("br"),n(" qinkangdeid/kodexplorer")])])],-1),ns=l(`<li><p>\u63D2\u4EF6</p><ol><li>lvm</li><li>omv extra</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">wget</span> http://omv-extras.org/openmediavault-omvextrasorg_latest_all4.deb
dpkg -i openmediavault-omvextrasorg_latest_all4.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u6587\u4EF6\u7CFB\u7EDF</p><ol><li>wipe\u64E6\u5199\u78C1\u76D8</li><li>\u521B\u5EFAraid(\u53EF\u9009)</li><li>\u521B\u5EFAlvm\u5206\u533A, \u5E76\u6302\u8F7D</li></ol></li><li><p>\u5B58\u50A8\u5668 \u5728\u5206\u533A\u4E0A\u5EFA\u7ACB\u5171\u4EAB\u76EE\u5F55</p><ol><li>\u5B58\u50A8\u27A1\uFE0F\u78C1\u76D8, \u53EF\u4EE5\u67E5\u770B\u73B0\u6709\u786C\u76D8</li><li>\u5B58\u50A8\u27A1\uFE0F\u903B\u8F91\u5377\u7BA1\u7406, \u76F8\u5F53\u4E8EWindows\u7684C/D\u76D8 <ul><li>2T\u786C\u76D8\u5206\u4E24\u4E2A storage \u4FDD\u5B58\u6240\u6709\u81EA\u7531\u6570\u636E docker_lib(\u4F4D\u4E8Eother, 200G)\u4FDD\u5B58docker\u76F8\u5173\u7684,\u955C\u50CF, \u6570\u636E\u5E93\u6587\u4EF6\u7B49</li><li>public1 500G \u7528\u6765\u5907\u4EFDtime machine</li></ul></li><li>\u5B58\u50A8\u27A1\uFE0F\u6587\u4EF6\u7CFB\u7EDF \u7528\u4E8E\u683C\u5F0F\u5316/\u6302\u8F7D/\u5378\u8F7D/\u5220\u9664\u4E4B\u524D\u7684\u903B\u8F91\u5377(\u5206\u533A), \u53EF\u4EE5\u5168\u7528ext4(\u517C\u5BB9mac/linux/Windows), \u4E5F\u53EF\u4EE5\u81EA\u7531\u9009\u62E9</li></ol></li>`,3),as=s("p",null,"\u914D\u7F6Etime machine \u5907\u4EFDmac",-1),es={href:"https://dannyda.com/2019/07/17/how-to-create-apple-time-machine-in-open-media-vault-omv/",target:"_blank",rel:"noopener noreferrer"},ls=n("https://dannyda.com/2019/07/17/how-to-create-apple-time-machine-in-open-media-vault-omv/"),os=s("li",null,[n("\u521B\u5EFA\u65F6\u95F4\u673A\u5668\u5907\u4EFD\u78C1\u76D8 "),s("ul",null,[s("li",null,"\u521B\u5EFA\u5171\u4EAB\u6587\u4EF6\u5939: \u8BBF\u95EE\u6743\u9650\u7BA1\u7406\u27A1\uFE0F\u5171\u4EAB\u6587\u4EF6\u5939\u27A1\uFE0F\u6DFB\u52A0\u27A1\uFE0F\u9009\u62E9\u540D\u79F0/\u8DEF\u5F84(xx/timemachine)/\u8BBE\u5907")])],-1),ts=s("li",null,[n("\u521B\u5EFA\u5907\u4EFD\u65F6\u95F4\u673A\u5668\u7684\u7528\u6237, \u5C06tm\u6587\u4EF6\u5939\u8BFB\u5199\u6743\u9650\u5171\u4EAB\u7ED9\u5B83 "),s("ul",null,[s("li",null,"\u7528\u6237 \u9009\u62E9tm\u7528\u6237, \u7279\u6743\u5C06\u5171\u4EAB\u6587\u4EF6\u5939\u6743\u9650\u8BFB\u5199\u5168\u9009")])],-1),ps=s("li",null,[s("p",null,"\u7528\u6237"),s("ul",null,[s("li",null,"\u6DFB\u52A0, \u6240\u6709\u8BBF\u95EE\u670D\u52A1\u5668\u7684\u7528\u6237\u90FD\u5728\u6B64, \u5305\u62ECweb\u754C\u9762/smb\u7B49"),s("li",null,"\u7F16\u8F91"),s("li",null,"\u7528\u6237\u7279\u6743, \u7528\u4E8E\u5171\u4EAB\u548C\u8BBE\u7F6E\u6743\u9650")])],-1),is=s("li",null,[s("p",null,"\u5171\u4EAB\u6587\u4EF6\u5939 \u89C1\u8BBF\u95EE\u6743\u9650\u7BA1\u7406\u27A1\uFE0F\u5171\u4EAB\u6587\u4EF6\u5939")],-1);function cs(rs,us){const a=t("ExternalLinkIcon");return p(),i("div",null,[r,s("ol",null,[u,s("li",null,[d,s("ol",null,[k,s("li",null,[v,s("ol",null,[b,m,h,s("li",null,[_,s("ol",null,[g,f,s("li",null,[q,s("a",$,[w,e(a)])]),y])])])])])]),s("li",null,[x,s("ol",null,[I,s("li",null,[P,s("ol",null,[s("li",null,[s("p",null,[S,s("a",D,[N,e(a)])]),R])])])])])]),T,E,s("ol",null,[s("li",null,[U,s("ol",null,[s("li",null,[O,s("ol",null,[s("li",null,[A,s("a",C,[L,e(a)])]),M])]),s("li",null,[B,s("a",V,[X,e(a)]),j])])]),s("li",null,[G,s("ol",null,[K,s("li",null,[F,s("ol",null,[W,s("li",null,[H,s("ol",null,[s("li",null,[s("a",Z,[z,e(a)])]),Q,Y,J,ss])])])]),ns,s("li",null,[as,s("ol",null,[s("li",null,[s("a",es,[ls,e(a)])]),os,ts])]),ps,is])])])])}var vs=o(c,[["render",cs],["__file","nas.html.vue"]]);export{vs as default};
