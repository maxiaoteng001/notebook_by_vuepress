import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as a,o as r,c as p,a as n,b as e,w as c,d as s,e as t}from"./app.29a9c448.js";const u={},d=n("h1",{id:"request-and-response",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#request-and-response","aria-hidden":"true"},"#"),s(" Request and Response")],-1),k={href:"https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/request-response.html",target:"_blank",rel:"noopener noreferrer"},v=s("\u4E2D\u6587\u6587\u6863"),m=t(`<p><strong>cookie : scrapy \u5BF9cookie\u7BA1\u7406\u6709\u5F88\u5F3A\u7684\u652F\u6301, \u53EF\u4EE5\u4E0D\u9700\u8981\u53BB\u7BA1\u7406</strong></p><h1 id="request" tabindex="-1"><a class="header-anchor" href="#request" aria-hidden="true">#</a> Request</h1><h2 id="_1-\u57FA\u672C\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_1-\u57FA\u672C\u53C2\u6570" aria-hidden="true">#</a> 1. \u57FA\u672C\u53C2\u6570</h2><ol><li>headers</li><li>url(\u8F6C\u4E49\u4E4B\u540E\u7684\uFF0C\u4FEE\u6539\u9700\u7528replace)</li><li>method</li><li>body (str\uFF0C\u7ECF\u8FC7\u8F6C\u4E49\u7684) <ol><li>\u5F53method\u4E3Apost\u65F6\u4F7F\u7528<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> urllib
<span class="token keyword">import</span> json
post_data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment"># &#39;content-type&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,</span>
post_data <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>post_data<span class="token punctuation">,</span> doseq<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token comment"># &quot;Content-Type&quot;: &quot;application/json&quot;,</span>
post_data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>post_data<span class="token punctuation">)</span>
<span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>post_url<span class="token punctuation">,</span>
            method<span class="token operator">=</span><span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
            body<span class="token operator">=</span>post_data<span class="token punctuation">,</span>
            headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">,</span>
            callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">,</span>
            dont_filter<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
            errback<span class="token operator">=</span>self<span class="token punctuation">.</span>errback_httpbin
        <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>\u5982\u679C\u662Fget\u65B9\u6CD5,get\u8BF7\u6C42\u7684querystring, \u9700\u8981\u4F7F\u7528: <code>url + &quot;?&quot; + urllib.parse.urlencode(dict)</code> \u6765\u81EA\u52A8\u62FC\u63A5,\u4E0D\u80FD\u5728\u6B64\u5904\u4F20\u5165\u3002</li></ol></li><li>cookies # \u9ED8\u8BA4\u751F\u6548,\u63A5\u53D7dict <ol><li>\u666E\u901A\u6DFB\u52A0cookie<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>cookies <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;PREF&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;TM={}277:L={}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>last_time<span class="token punctuation">,</span> keyword_urlencode<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;RQ&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;q=&amp;l={}&amp;ts={}114&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>keyword_urlencode<span class="token punctuation">,</span> before_time<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
request <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> 
                headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">,</span>
                cookies<span class="token operator">=</span>cookies<span class="token punctuation">,</span>
                callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">,</span> 
                errback<span class="token operator">=</span>self<span class="token punctuation">.</span>errback_httpbin<span class="token punctuation">,</span>
                dont_filter<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                meta<span class="token operator">=</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>dont_merge_cookies \u6B64\u65F6cookies\u53C2\u6570\u5C31\u4E0D\u518D\u9002\u7528, cookie\u4E2D\u95F4\u4EF6\u4E5F\u4E0D\u518D\u5904\u7406set-cookie<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>custom_settings <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;COOKIES_ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
meta <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
meta<span class="token punctuation">[</span><span class="token string">&#39;dont_merge_cookies&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>
self<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;; &quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;=&quot;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> cookies<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>meta<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
    headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">,</span> 
    callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">,</span> 
    errback<span class="token operator">=</span>self<span class="token punctuation">.</span>errback_httpbin<span class="token punctuation">,</span>
    meta<span class="token operator">=</span>meta<span class="token punctuation">,</span> 
    dont_filter<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li>callback</li><li>meta</li></ol><ul><li>\u4E0A\u4E00\u4E2A\u8BF7\u6C42 request.meta[&#39;item&#39;] = item</li><li>\u4E0B\u4E00\u4E2A\u54CD\u5E94\u4E2Dresponse.meta[&#39;item&#39;] \u4FBF\u662Fitem</li></ul><ol start="8"><li>errback</li></ol><ul><li>\u8FD4\u56DEnon-200\u65F6\u8C03\u7528</li><li>\u6BD4\u5982\uFF1Adef errback_httpbin(self, failure): \u2026 \uFF0C</li><li>failure.check(ErrorType),</li><li>ErrorType\u6709HttpError, DNSLookupError,TimeoutError, TCPTimeOutError\u2026</li></ul><ol start="9"><li>dont_filter(\u9ED8\u8BA4false, \u8FC7\u6EE4\u91CD\u590D\u8BF7\u6C42, \u5982\u679C\u8981\u5904\u7406302,301, \u5C31\u9700\u8981\u8BBE\u7F6E\u6210True)</li></ol><h2 id="_2-\u5B50\u7C7Bformrequest-\u53D1\u9001post\u8BF7\u6C42-\u53EF\u9009" tabindex="-1"><a class="header-anchor" href="#_2-\u5B50\u7C7Bformrequest-\u53D1\u9001post\u8BF7\u6C42-\u53EF\u9009" aria-hidden="true">#</a> 2. \u5B50\u7C7BFormRequest\uFF08\u53D1\u9001post\u8BF7\u6C42, \u53EF\u9009\uFF09</h2><ul><li>url</li><li>formdata(\u6B64\u5904\u4F20\u5165dict\u5373\u53EF) iii. call_back iv. \u2026 v. FromRequest.from_response(response, formdata, call_back)</li></ul><ol><li>\u53EF\u4EE5\u7528\u6765\u6A21\u62DF\u7528\u6237\u767B\u5F55</li><li>\u5728login\u7684\u65B9\u6CD5\u4E2D\uFF1A return scrapy.FormRequest.from_response( response, formdata={&#39;name&#39;=&#39;xx&#39;, &#39;password&#39;=&#39;xx&#39;}, callback=self.after_login )</li></ol><h2 id="_3-dont-filter\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#_3-dont-filter\u673A\u5236" aria-hidden="true">#</a> 3. dont_filter\u673A\u5236</h2><h2 id="_4-errback\u7684\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_4-errback\u7684\u5904\u7406" aria-hidden="true">#</a> 4. errback\u7684\u5904\u7406</h2>`,13),b=s("scrapy\u9ED8\u8BA4\u60C5\u51B5\u4E0B, \u53EA\u6709status\u5728200-300\u4E4B\u95F4\u65F6\u624D\u4F1A\u8C03\u7528callback, \u5176\u4ED6\u90FD\u7531errback\u8C03\u7528"),h=n("br",null,null,-1),f=s(" \u53EF\u4EE5\u5B9A\u4E49\u8981\u8FDB\u5165callback\u7684\u5176\u4ED6\u8FD4\u56DE\u7801"),_=s("setting.md\u7684\u5904\u7406HTTP\u9519\u8BEF"),g=s(","),q=t(`<ol><li>\u8C03\u7528\u65B9\u6CD5<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># \u901A\u5E38\u6709\u4E09\u79CD\u60C5\u51B5\u4F1A\u8C03\u7528\u5230errback
import scrapy

from scrapy.spidermiddlewares.httperror import HttpError
from twisted.internet.error import DNSLookupError
from twisted.internet.error import TimeoutError, TCPTimedOutError

...

def errback_httpbin(self, failure):
    # log all failures
    self.logger.error(repr(failure))
    # in case you want to do something special for some errors,
    # you may need the failure&#39;s type:

    if failure.check(HttpError):
        # these exceptions come from HttpError spider middleware
        # you can get the non-200 response
        response = failure.value.response
        self.logger.error(&#39;HttpError on %s&#39;, response.url)

    elif failure.check(DNSLookupError):
        # this is the original request
        request = failure.request
        self.logger.error(&#39;DNSLookupError on %s&#39;, request.url)

    elif failure.check(TimeoutError, TCPTimedOutError):
        request = failure.request
        self.logger.error(&#39;TimeoutError on %s&#39;, request.url)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>\u51E0\u79CD\u5904\u7406 <ol><li>\u91CD\u8BD5<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># \u901A\u5E38\u90FD\u662F\u5728meta\u4E2D\u4FDD\u5B58\u8BF7\u6C42\u7684\u53C2\u6570\uFF0C\u53EF\u4EE5\u653E\u56DEredis\u6216\u76F4\u63A5\u91CD\u6784\u8BF7\u6C42
meta = failure.request.meta.copy()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>\u5BF9\u4E8EHttpError\u7684\u8BF7\u6C42<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># \u53EF\u4EE5\u53D6\u56DEstatus, url, headers(\u7528\u6765\u83B7\u53D6\u91CD\u5B9A\u5411\u7684url)\u7B49
response = failure.value.response
url = response.url
status = response.status
headers = response.headers
# \u5982\u679C\u8FD4\u56DE302\u6216301
location = headers.get(&#39;Location&#39;).decode(&#39;utf-8&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li></ol><h1 id="response" tabindex="-1"><a class="header-anchor" href="#response" aria-hidden="true">#</a> Response</h1><h2 id="_1-\u57FA\u672C\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_1-\u57FA\u672C\u5C5E\u6027" aria-hidden="true">#</a> 1. \u57FA\u672C\u5C5E\u6027</h2><ol><li>url(string)</li><li>headers(dict)</li><li>status(integer)</li><li>body(bytes),</li><li>text # body.decode(&#39;utf-8&#39;) = text utf-8\u53EF\u4EE5\u662F\u5176\u4ED6\u7C7B\u578B, <meta charset="UTF-8"></li><li>meta(dict)</li><li>flags(list)</li><li>request<br> \u4EA7\u751F\u8FD9\u4E2Aresponse\u7684request\u5BF9\u8C61\uFF0C\u91CD\u5B9A\u5411\u540E\u7684request\u662F\u539F\u59CB\u7684\uFF0C\u6240\u4EE5<code>response.url == response.request.url</code> \u4E0D\u603B\u662F\u6210\u7ACB</li></ol>`,4);function y(x,E){const o=a("ExternalLinkIcon"),i=a("RouterLink");return r(),p("div",null,[d,n("p",null,[n("a",k,[v,e(o)])]),m,n("p",null,[b,h,f,e(i,{to:"/python/crawler/Scrapy/scrapy-setting.html"},{default:c(()=>[_]),_:1}),g]),q])}var R=l(u,[["render",y],["__file","request-and-response.html.vue"]]);export{R as default};
