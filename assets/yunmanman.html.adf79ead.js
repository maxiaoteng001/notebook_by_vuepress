import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as i,a as n,b as e,d as s,e as t}from"./app.29a9c448.js";const l={},u=n("h1",{id:"\u8FD0\u6EE1\u6EE1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u8FD0\u6EE1\u6EE1","aria-hidden":"true"},"#"),s(" \u8FD0\u6EE1\u6EE1")],-1),r=n("p",null,"[TOC]",-1),d=n("p",null,"\u60F3\u8981\u89E3\u51B3\u7684\u95EE\u9898:",-1),k=n("ol",null,[n("li",null,"\u5BF9\u8FD0\u6EE1\u6EE1\u7684\u914D\u8D27\u5927\u5385\u611F\u5174\u8DA3, \u54CD\u5E94\u52A0\u5BC6\u72B6\u6001")],-1),v=n("h2",{id:"_1-\u8FD0\u6EE1\u6EE1\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-\u8FD0\u6EE1\u6EE1\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F","aria-hidden":"true"},"#"),s(" 1. \u8FD0\u6EE1\u6EE1\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F")],-1),m=n("li",null,[s("\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F\u53CD\u7F16\u8BD1\u540E\u8C03\u8BD5\u62A5\u9519, \u9700\u8981\u5728 "),n("code",null,"\u8BE6\u60C5"),s(" -> "),n("code",null,"\u672C\u5730\u8BBE\u7F6E"),s(" -> \u5173\u95ED"),n("code",null,"es6\u8F6Ces5"),s("\u7B49\u4E00\u7CFB\u5217\u8BBE\u7F6E")],-1),b=s("\u8C03\u8BD5\u63A5\u53E3: "),y={href:"https://www.ymm56.com/ymm-cargo-search-app/cargoes/applet/multiSearch",target:"_blank",rel:"noopener noreferrer"},h=s("https://www.ymm56.com/ymm-cargo-search-app/cargoes/applet/multiSearch"),g=s(" \u54CD\u5E94\u4E3Aaes\u52A0\u5BC6 "),w=t(`<li>\u8C03\u8BD5\u8FC7\u7A0B: <ol><li><p>\u52A0\u8F7D\u5C0F\u7A0B\u5E8F\u540E\u7531\u4E8E\u65E0\u6CD5\u767B\u9646, \u6240\u4EE5\u63A5\u53E3\u65E0\u6CD5\u8FD4\u56DE\u6570\u636E, \u5168\u5C40\u641C\u7D22<code>decrypt</code>\u5B9A\u4F4D\u5230<code>_-1963279196_115/extend/common-re.mini.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> _<span class="token operator">-</span><span class="token number">1963279196_115</span><span class="token operator">/</span>extend<span class="token operator">/</span>common<span class="token operator">-</span>re<span class="token punctuation">.</span>mini<span class="token punctuation">.</span>js <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> \u52A0\u5BC6\u5DE5\u5177 <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">return</span> o<span class="token punctuation">.</span>de <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">e1</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
        <span class="token keyword">return</span> e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span> e<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">X__</span><span class="token punctuation">,</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> e<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">dk</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> r <span class="token operator">=</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n <span class="token operator">=</span> r<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> n <span class="token operator">+=</span> r<span class="token punctuation">;</span>
        <span class="token keyword">var</span> o <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span> e<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">X__</span><span class="token punctuation">,</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> e<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> o <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span> e<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">X__</span><span class="token punctuation">,</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> e<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">isEx</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">51</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e<span class="token punctuation">,</span> r <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n <span class="token operator">=</span> r<span class="token punctuation">.</span>length<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> o <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> o<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">48</span> <span class="token operator">&amp;&amp;</span> e <span class="token operator">&lt;</span> <span class="token number">58</span> <span class="token operator">?</span> e <span class="token operator">-=</span> <span class="token number">48</span> <span class="token operator">:</span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">223</span> <span class="token operator">&amp;</span> e<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">65</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">,</span> 
        i<span class="token punctuation">[</span>o<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
        <span class="token keyword">return</span> t <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">16</span> <span class="token operator">*</span> t <span class="token operator">+</span> e<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sign</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>t <span class="token operator">?</span> e<span class="token punctuation">.</span><span class="token constant">MD5</span><span class="token punctuation">(</span><span class="token string">&quot;key=&quot;</span> <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token string">&quot;&amp;body=&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token constant">MD5</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Hex<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> e<span class="token punctuation">.</span><span class="token constant">MD5</span><span class="token punctuation">(</span><span class="token string">&quot;key=&quot;</span> <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token string">&quot;&amp;body=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Hex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">MD5</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token constant">MD5</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Hex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u901A\u8FC7log\u4E00\u4E9B\u53D8\u91CF, \u53D1\u73B0\u5C3D\u7BA1\u65E0\u6CD5\u8FD8\u539Fresponse\u7684\u89E3\u5BC6, \u4F46\u662F\u6784\u9020\u8BF7\u6C42\u7684\u52A0\u5BC6\u8FC7\u7A0B\u53EF\u4EE5\u8FFD\u8E2A, \u8BC1\u5B9E\u4E86\u6B65\u9AA4\u4E00\u7684\u5047\u8BBE</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> _<span class="token operator">-</span><span class="token number">1963279196_115</span><span class="token operator">/</span>mixins<span class="token operator">/</span>basePage<span class="token punctuation">.</span>js <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> \u52A0\u5BC6\u6784\u9020\u8BF7\u6C42\u53C2\u6570 <span class="token operator">--</span><span class="token operator">&gt;</span>
y <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> m <span class="token operator">=</span> h<span class="token punctuation">.</span>default<span class="token punctuation">.</span>de<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">,</span> f<span class="token punctuation">[</span><span class="token string">&quot;re-key&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> h<span class="token punctuation">.</span>default<span class="token punctuation">.</span>de<span class="token punctuation">.</span><span class="token constant">MD5</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> 
f<span class="token punctuation">[</span><span class="token string">&quot;re-sign&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u54CD\u5E94\u4E2D\u6709\u5B57\u6BB5<code>isEncrypted</code>, \u5B9A\u4F4D\u5230\u54CD\u5E94\u7684\u89E3\u5BC6\u4F4D\u7F6E, v\u5E94\u8BE5\u5C31\u662F\u5BC6\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> _<span class="token operator">-</span><span class="token number">1963279196_115</span><span class="token operator">/</span>mixins<span class="token operator">/</span>basePage<span class="token punctuation">.</span>js <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;payload.ignoreLogin&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">,</span> o <span class="token operator">=</span> r<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>isEncrypt <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>isEncrypted <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>default<span class="token punctuation">.</span>de<span class="token punctuation">.</span><span class="token function">e1</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>data<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
    <span class="token number">200</span> <span class="token operator">!==</span> r<span class="token punctuation">.</span>statusCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">a</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5206\u6790\u8BF7\u6C42\u52A0\u5BC6\u8FC7\u7A0B\u53D1\u73B0\u4E00\u6BB5\u5947\u602A\u7684\u5B57\u7B26\u4E32, \u7C7B\u4F3C <code>o6L07FylH6OhS1GFWG7Rr7FRAswUVE7bBtYRj+1ZOvrflxpuC78e3eawsa1G51FmV23+OSSEJ7rqhcI9S2MahQ==#####</code>, \u901A\u8FC7\u8C03\u7528<code>dk</code>\u540E\u751F\u6210\u957F\u5EA652\u7684\u5B57\u7B26\u4E32(\u5B9E\u9645\u4E0A\u5C31\u662F\u5BC6\u94A5), \u4E4B\u540E\u7528\u8FD9\u4E2A\u5B57\u7B26\u4E32\u751F\u6210<code>multiSearch</code>\u8BF7\u6C42\u7684\u53C2\u6570</p></li><li><p>\u53D1\u73B0<code>e1</code>\u65B9\u6CD5\u4E2D\u4F20\u5165\u7684<code>v</code>\u5B9E\u9645\u4E0A\u5C31\u662F\u5BC6\u94A5\u7684\u540E16\u4F4D</p></li><li><p>\u9A8C\u8BC1\u731C\u6D4B\u6210\u7ACB</p></li></ol></li>`,1),f=s("\u8BF7\u6C42\u903B\u8F91 "),_=s("\u8BF7\u6C42"),x={href:"https://www.ymm56.com/risk-encrypt/encrypt/key-generate",target:"_blank",rel:"noopener noreferrer"},R=s("https://www.ymm56.com/risk-encrypt/encrypt/key-generate"),E=s(" \u8FD4\u56DE\u52A0\u5BC6\u540E\u7684\u5BC6\u94A5, \u7136\u540E\u901A\u8FC7\u81EA\u5B9A\u4E49\u89E3\u5BC6\u65B9\u6CD5"),O=n("code",null,"dk",-1),j=s("\u89E3\u5BC6 "),S=n("ol",null,[n("li",null,"\u52A0\u5BC6\u5185\u5BB9\u957F\u5EA6\u5BF910\u53D6\u4F59 *16 \u4E3A\u5BC6\u7801"),n("li",null,"aes\u89E3\u5BC6\u5F97\u5230\u771F\u5B9E\u5BC6\u94A5")],-1),q=s("\u53D1\u9001"),B={href:"https://www.ymm56.com/ymm-cargo-search-app/cargoes/applet/multiSearch",target:"_blank",rel:"noopener noreferrer"},P=s("https://www.ymm56.com/ymm-cargo-search-app/cargoes/applet/multiSearch"),A=s("\u65F6, \u6839\u636E\u524D\u4E00\u4E2A\u8BF7\u6C42\u7684\u5BC6\u94A5, \u4F20\u8F93\u5BC6\u94A5\u7684md5\u548Csign\u6765\u6807\u8BB0\u8BF7\u6C42"),J=n("li",null,"\u63A5\u6536\u5230\u54CD\u5E94\u540E, \u7528\u5BC6\u94A5\u7684\u540E16\u4F4D\u4F5C\u4E3A\u5BC6\u7801, \u89E3\u5BC6",-1),C=n("li",null,"\u6240\u6709\u52A0\u5BC6\u91C7\u7528aes.ECB, \u586B\u5145\u65B9\u5F0F: pkcs7padding, \u6570\u636E\u5757:128\u4F4D",-1),I=n("li",null,[s("key-generate\u4EA7\u751F\u7684\u5BC6\u94A5\u4F1A\u6709\u6548\u4E00\u6BB5\u65F6\u95F4, \u53EF\u4EE5\u901A\u8FC7\u53D1\u9001\u8BF7\u6C42\u7684"),n("code",null,"re-key"),s(", "),n("code",null,"re-sign"),s("\u6765\u5224\u65AD\u662F\u5426\u4E00\u81F4")],-1),D=n("h2",{id:"_2-app-\u8FD0\u6EE1\u6EE1\u53F8\u673A\u5BA2\u6237\u7AEF",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-app-\u8FD0\u6EE1\u6EE1\u53F8\u673A\u5BA2\u6237\u7AEF","aria-hidden":"true"},"#"),s(" 2. app \u8FD0\u6EE1\u6EE1\u53F8\u673A\u5BA2\u6237\u7AEF")],-1),M=t(`<li><p>\u68C0\u6D4Bfrida</p><div class="language-Java ext-Java line-numbers-mode"><pre class="language-Java"><code>package com.mb.lib.device.security;

class SecurityServiceImpl(){
    private boolean continueCheckFrida(CheckOption checkOption, final ContinueCheckListener continueCheckListener) {
        ...
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),T=t(`<p>\u5F53\u5929\u8D27\u6E90\u63A5\u53E3 app\u5F53\u5929\u8D27\u6E90\u5728\u533F\u540D\u548C\u7528\u6237\u767B\u9646\u540E, \u5206\u522B\u4F7F\u7528\u4E0D\u540C\u7684\u63A5\u53E3</p><div class="language-Java ext-Java line-numbers-mode"><pre class="language-Java"><code>// \u52A0\u5BC6\u65B9\u5F0F\u4E5F\u4E0D\u540C, \u767B\u9646\u540E\u63A5\u53E3\u8FD4\u56DE\u53C2\u6570\u6709etype=1, \u8C03\u7528
// \u54CD\u5E94\u5305\u542B var tmp etype\u4E09\u4E2A\u53C2\u6570
if (rawResponseObj.geteType() == 0) {
    response = decryptByPShell(response, rawResponseObj);
} else {
    response = decryptByIE(response, rawResponseObj, isEmpty);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u5BC6\u540E\u53D1\u73B0, \u8BA2\u5355\u5217\u8868\u7B49\u4E00\u4E9B\u8BF7\u6C42\u505A\u4E86\u538B\u7F29</p><div class="language-Java ext-Java line-numbers-mode"><pre class="language-Java"><code>package com.ymm.lib.commonbusiness.ymmbase.network.interceptor;

public class EncryptInterceptor extends BaseInterceptor{
    if (isEmpty &amp;&amp; (split = response.header(&quot;M-X&quot;).split(&quot;&amp;&quot;)) != null) {
        for (String str : split) {
            if (str.trim().equals(&quot;type=2&quot;)) {
                try {
                    response.body().contentLength();
                    response.request().url().toString();
                    byte[] decompress = DelfateUtil.decompress(response.body().bytes());
                    int length = decompress.length;
                    response = response.newBuilder().body(ResponseBody.create(response.body().contentType(), new String(decompress, this.mCharset.name()))).removeHeader(&quot;M-X&quot;).build();
                } catch (Exception e2) {
                }
            }
        }
    }
}


// package com.ymm.lib.commonbusiness.ymmbase.util.DelfateUtil

public static byte[] decompress(byte[] bArr)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),U=s("\u767B\u9646\u641C\u7D22: "),V={href:"https://www.ymm56.com/ymm-cargo-search-app/cargoes/multiSearch",target:"_blank",rel:"noopener noreferrer"},N=s("https://www.ymm56.com/ymm-cargo-search-app/cargoes/multiSearch"),L=t(`<div class="language-Java ext-Java line-numbers-mode"><pre class="language-Java"><code>package com.ymm.lib.commonbusiness.ymmbase.network.interceptor;

public class EncryptInterceptor extends BaseInterceptor{
    private c iEncrypt = cl.a.a(&quot;random_cipher&quot;);

    private Response decryptByIE(Response response, RawResponseObj rawResponseObj, boolean z2) throws IOException {
        PatchProxyResult proxy = PatchProxy.proxy(new Object[]{response, rawResponseObj, new Byte(z2 ? (byte) 1 : 0)}, this, changeQuickRedirect, false, 20146, new Class[]{Response.class, RawResponseObj.class, Boolean.TYPE}, Response.class);
        if (proxy.isSupported) {
            return (Response) proxy.result;
        }
        if (rawResponseObj.isVarEmpty()) {
            throw new EncryptException(201);
        } else if (z2) {
            try {
                byte[] c2 = this.iEncrypt.c(com.ijiami.a.a(rawResponseObj.getVar()));
                if (c2.length != 0) {
                    return response.newBuilder().body(ResponseBody.create(response.body().contentType(), c2)).build();
                }
                throw new EncryptException(202);
            } catch (Exception unused) {
                throw new EncryptException(200);
            }
        } else {
            try {
                String c3 = this.iEncrypt.c(rawResponseObj.getVar());
                if (!TextUtils.isEmpty(c3)) {
                    return response.newBuilder().body(ResponseBody.create(response.body().contentType(), c3)).build();
                }
                throw new EncryptException(202);
            } catch (Exception unused2) {
                throw new EncryptException(200);
            }
        }
    }
}

// cl.a
// return cl.e.a
public byte[] a(byte[] bArr) throws Exception {
    PatchProxyResult proxy = PatchProxy.proxy(new Object[]{bArr}, this, changeQuickRedirect, false, 4486, new Class[]{byte[].class}, byte[].class);
    return proxy.isSupported ? (byte[]) proxy.result : d.a(bArr);
}

// cl.d.a
public static byte[] a(byte[] bArr) throws Exception {
    PatchProxyResult proxy = PatchProxy.proxy(new Object[]{bArr}, null, changeQuickRedirect, true, 4480, new Class[]{byte[].class}, byte[].class);
    return proxy.isSupported ? (byte[]) proxy.result : JMEncryptBoxByRandom.a(bArr);
}

// \u89E3\u5BC6
// this.iEncrypt.c
// com.ijiami.JMEncryptBoxByRandom
public class JMEncryptBoxByRandom {
    public static native byte[] dencryptByRandom(byte[] bArr);

    public static native byte[] encryptByRandom(byte[] bArr);

    static {
        new JMEncryptBox();
    }

    public static byte[] c(byte[] bArr) throws Exception {
        return dencryptByRandom(bArr);
    }
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),F=s("\u8BBF\u5BA2\u641C\u7D22: "),H={href:"https://www.ymm56.com/ymm-cargo-search-app/cargoes/visitorSearch",target:"_blank",rel:"noopener noreferrer"},Q=s("https://www.ymm56.com/ymm-cargo-search-app/cargoes/visitorSearch"),X=t(`<div class="language-Java ext-Java line-numbers-mode"><pre class="language-Java"><code>package com.ymm.lib.commonbusiness.ymmbase.network.interceptor;

private Response decryptByPShell(Response response, RawResponseObj rawResponseObj) throws IOException {
    PatchProxyResult proxy = PatchProxy.proxy(new Object[]{response, rawResponseObj}, this, changeQuickRedirect, false, 20147, new Class[]{Response.class, RawResponseObj.class}, Response.class);
    if (proxy.isSupported) {
        return (Response) proxy.result;
    }
    URL url = new URL(response.request().url().toString());
    if (SecurityCenter.getInstance().needRefresh(rawResponseObj.getOverload(), rawResponseObj.getTemp(), rawResponseObj.getVar())) {
        SecurityCenter.getInstance().requestRefreshAlgorithm(new RefreshParam.Builder().setKey(url.toString()).setOldPolicyNumber(rawResponseObj.getNumber()).setPath(rawResponseObj.getPath()).setOverload(rawResponseObj.getOverload()).setAim(rawResponseObj.getAim()).build());
    }
    if (!rawResponseObj.isTmpVarEmpty()) {
        DecryptResultObj decrypt = SecurityCenter.getInstance().decrypt(url.toString(), rawResponseObj.getVar(), buildFactors(response.request()), rawResponseObj.getTemp(), Integer.valueOf(rawResponseObj.getNumber()));
        if (decrypt.getDecrypt() == null || decrypt.getDecrypt().length &lt;= 0) {
            SecurityCenter.getInstance().requestRefreshAlgorithm(new RefreshParam.Builder().setKey(url.toString()).setOldPolicyNumber(rawResponseObj.getNumber()).setPath(rawResponseObj.getPath()).setOverload(rawResponseObj.getOverload()).setAim(rawResponseObj.getAim()).build());
            throw new EncryptException(102);
        }
        return response.newBuilder().body(ResponseBody.create(response.body().contentType(), decrypt.getDecrypt())).build();
    }
    throw new EncryptException(101);
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function z(G,K){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,r,d,k,v,n("ol",null,[m,n("li",null,[b,n("a",y,[h,e(a)]),g,n("ol",null,[w,n("li",null,[f,n("ol",null,[n("li",null,[_,n("a",x,[R,e(a)]),E,O,j,S]),n("li",null,[q,n("a",B,[P,e(a)]),A]),J,C,I])])])])]),D,n("ol",null,[M,n("li",null,[T,n("ul",null,[n("li",null,[n("p",null,[U,n("a",V,[N,e(a)])]),L]),n("li",null,[n("p",null,[F,n("a",H,[Q,e(a)])]),X])])])])])}var Z=p(l,[["render",z],["__file","yunmanman.html.vue"]]);export{Z as default};
